{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGripItem.js","components/GifGrip.js","hooks/useFetchGifs.js","components/GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","protoType","PropTypes","func","isRequired","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","gif","id","title","images","downsized_medium","GifGripItem","className","src","alt","GifGrip","loading","state","setState","useEffect","then","setTimeout","useFetchGifs","img","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"kNAgBaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEfC,mBAAS,IAFM,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAoC9C,OACI,sBAAMC,SAvBW,SAACC,GAGlBA,EAAEC,iBAICJ,EAAWK,OAAOC,OAAS,IAG1BR,GAAc,SAACS,GAAD,OACVP,GADU,mBAEPO,OAIPN,EAAS,MAOb,SACI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SAnCc,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAGzBV,EAASU,EAAOF,aAuCxBZ,EAAYe,UAAY,CACpBd,cAAee,IAAUC,KAAKC,Y,mCCtDrBC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAIbC,EAJa,iDAImCC,UAAUH,GAJ7C,+DAKAI,MAAMF,GALN,cAKbG,EALa,gBAMKA,EAAKC,OANV,uBAMXC,EANW,EAMXA,KAIFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC3B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAdvB,kBAkBZM,GAlBY,4CAAH,sDCTPO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAEjC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,4BAAKA,QCDJO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECQb,SAACA,GAAa,MAGZlB,mBAAS,CAC/ByB,KAAM,GACNa,SAAS,IALyB,mBAG/BC,EAH+B,KAGxBC,EAHwB,KA2BtC,OAlBAC,oBAAS,sBAAC,sBAAAtB,EAAA,sDAENF,EAAQC,GACHwB,MAAK,SAAAhB,GACFiB,YAAW,WACPH,EAAS,CACLf,KAAMC,EACNY,SAAS,MAEd,QATL,2CAcP,CAACpB,IAIGqB,ED1BmBK,CAAa1B,GAA/BO,EAT6B,EAS7BA,KAAMa,EATuB,EASvBA,QAGd,OACI,mCAIQA,EACM,2CAEF,gCACI,6BAAMpB,IACN,qBAAKgB,UAAU,YAAf,SAEQT,EAAKE,KAAI,SAACkB,GAAD,OACL,cAAC,EAAD,eAESA,GADCA,EAAIhB,eErBrCiB,EAAe,WAAM,MAIM9C,mBAAS,CAAC,gBAJhB,mBAIvB+C,EAJuB,KAIXhD,EAJW,KAO9B,OACI,qCACI,8CAEA,cAAC,EAAD,CAAaA,cAAgBA,IAE7B,uBAGA,6BAGQgD,EAAWpB,KAAI,SAACT,GAAD,OACX,cAAC,EAAD,CAEIA,SAAWA,GADLA,Y,MCrBlC8B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.e44f2c5b.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\n//Libreria necesaria para la validacion de los props\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\n/* ====================================\r\n\r\n    ESTE ES EL SEGUNDO COMPONENTE (HIJO)\r\n    MANEJA EL INPUT \r\n\r\n    ESTE COMPONENTE MODIFICA EL STATE DEL SU COMPONENTE PADRE\r\n\r\n======================================= */\r\n\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n    \r\n    const [inputValue, setValue] = useState('');\r\n\r\n\r\n    // DEFINIENDO EVENTO QUE SE VA A DISPARAR CADA VEZ QUE SE TECLEA ALGO EN EL INPUT \r\n    const handleInputChange = ({ target }) => {\r\n\r\n        //CAMBIANDO EL VALOR DEL useState \"inputValue\" POR EL VALOR DEL TARGET\r\n        setValue(target.value);\r\n    }\r\n\r\n    \r\n    // MANEJADOR DEL ENVIO DEL FORMULARIO\r\n    const handleSubmit = (e) => {\r\n\r\n        // EVITANDO EL REFRESCAMIENTO DE LA PANTALLA\r\n        e.preventDefault();\r\n\r\n\r\n        // VALIDACION \r\n        if(inputValue.trim().length > 2){\r\n            /* DEBIDO A QUE NO TENGO ACCESO A LAS \"categories\" DIRECTAMENTE DESDE ESTE COMPONENTE POR QUE \r\n            NO LO PEDI EN LOS PROPS HAGO UNA REFERENCIA DEL MISMO */\r\n            setCategories((cats) => [\r\n                inputValue,\r\n                ...cats\r\n            ]);\r\n\r\n            //LIMPIANDO EL VALOR DE INPUT\r\n            setValue('');\r\n        }\r\n\r\n        \r\n    }\r\n    \r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <input \r\n                type='text'\r\n                value={ inputValue }\r\n                onChange={ handleInputChange }\r\n            />\r\n        </form>  \r\n    )\r\n}\r\n\r\n\r\nAddCategory.protoType = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","\r\n\r\n/* ============================ \r\n\r\n    LOS HELPERS SON FUNCIONES QUE HACEN ALGUN TRABAJO ESPECIFICO\r\n    Y RETORNAN UN RESULTADO\r\n\r\n================================== */\r\n\r\n\r\n// DEFINIENDO FUNCION QUE HARA PETICIONES A LA API DE GIFS\r\nexport const getGifs = async (category) => {\r\n\r\n        \r\n    // URL ESTATICA CON SU API_KEY DEFINIDA, QUE RETORNA 10 GIFS DE DIGIMON\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=lnpBeorLYo5OWEYujGov7nLC4jwBpAMV`;\r\n    const resp = await fetch(url); // PETICION HTTP EN JAVASCRIPT ACTUAL\r\n    const { data }  = await resp.json(); // PETICION HTTP EN JAVASCRIPT ACTUAL. RETORNA UN ARRAY DE OBJECTOS\r\n\r\n\r\n    // BARRIENDO EL ARREGLO DE OBJETOS (GIFS) Y CAPTURANDO UN ARRAY DE OBJECT CON SOLO LA INFO NECESARIA \r\n    const gifs = data.map((gif) => {\r\n        return {\r\n            id: gif.id,\r\n            title: gif.title,\r\n            url: gif.images?.downsized_medium.url\r\n        }\r\n    });\r\n\r\n    return gifs;\r\n}","import React from 'react';\r\n\r\nexport const GifGripItem = ({ title, url }) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__bounce\">\r\n            <img src={ url } alt={ title }/>\r\n            <p>{ title }</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGripItem } from './GifGripItem';\r\n\r\n//import { getGifs } from '../helpers/getGifs';\r\n\r\nexport const GifGrip = ({ category }) => {\r\n\r\n    /* -------------------------------\r\n        REACT POR NATURALEZA VUELVE A LEER Y EJECUTAR TODO EL COMPONENTE\r\n        AL NOTAR ALGUN CAMBIO EN SI \r\n    -------------------------------- */\r\n\r\n\r\n    // IR A BUSCAR GIFS A LA API\r\n    const { data, loading } = useFetchGifs(category);\r\n    \r\n\r\n    return (\r\n        <>\r\n            \r\n        \r\n            {\r\n                loading\r\n                    ? <p>LOADING...</p>\r\n                    : \r\n                    <div>\r\n                        <h3>{ category }</h3>\r\n                        <div className=\"card-grid\">\r\n                            {\r\n                                data.map((img) => (\r\n                                    <GifGripItem \r\n                                        key={ img.id }\r\n                                        { ...img }\r\n                                    />\r\n                                ))\r\n                            } \r\n                        </div>\r\n                    </div>\r\n                    \r\n            }\r\n\r\n            \r\n        </>\r\n    )\r\n}\r\n","\r\n/*============================================== \r\n\r\n    LOS CUSTON HOOK, SON HOOKS DEFINIDOS POR EL PROGRAMADOR \r\n    PARA MANEJAR PROCESOS QUE SE REPETIRAN CONTINUAMENTE \r\n\r\n    PARATICULARMENTE ESTE HOOK SE ENCARGAR DE MANEJAR LAS PETICIONES\r\n    A LA API DE GIFS\r\n\r\n========================================== */\r\n\r\nimport { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n    \r\n    //ESTE SERA EL ESTADO POR DEFECTO DE ESTE HOOK\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    /* EFECTO QUE SE ACTIVARA CADA VEZ QUE LA CATEGORIA CAMBIE */\r\n    useEffect(async () => {\r\n\r\n        getGifs(category)\r\n            .then(gifs => {\r\n                setTimeout(() => {\r\n                    setState({\r\n                        data: gifs,\r\n                        loading: false\r\n                    })\r\n                }, 3000);\r\n            })\r\n        \r\n        \r\n       \r\n    }, [category])\r\n    \r\n    \r\n\r\n    return state;\r\n}\r\n","import React, { useState } from 'react';\r\nimport { AddCategory } from './AddCategory';\r\nimport { GifGrip } from './GifGrip';\r\n\r\n\r\n/* ====================================\r\n\r\n    ESTE ES EL COMPONENTE PRINCIAL (PADRE)\r\n\r\n======================================= */\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n\r\n    // CREANDO UN useState PARA MANEJAR LAS CATEGORIAS \r\n    const [categories, setCategories] = useState(['Dragon Ball']);\r\n\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2> \r\n\r\n            <AddCategory setCategories={ setCategories }/>\r\n\r\n            <hr/> \r\n\r\n\r\n            <ol>\r\n                {\r\n                    // BARRIENDO EL ARREGLO DE CATEGORIAS\r\n                    categories.map((category) => ( \r\n                        <GifGrip \r\n                            key={ category }\r\n                            category={ category }\r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n\r\n          \r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './components/GifExpertApp';\nimport './index.css';\n\n/* ===================\n\n  ESTA SERA UNA APP QUE MOSTRARA GIF DE UN TEMA EN PARTICULAR\n\n======================= */\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}